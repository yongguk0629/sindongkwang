name: Run Github Actions

on:
  push:
    branches:
      - develop

jobs:
  run-client-action:
    name: Run Client Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        working-directory: ./client
        run: npm install

      - name: Build project
        working-directory: ./client
        run: npm run build

  run-sdk-action:
    name: Run SDK Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        working-directory: ./sdk
        run: ./gradlew build -x test

  build-and-deploy:
    name: Build and Deploy with Docker
    runs-on: ubuntu-latest
    needs:
      - run-client-action
      - run-sdk-action
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Deploy
        run: |
          docker-compose -f docker-compose.yml down
          docker-compose -f docker-compose.yml up -d
